// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nodeagent.proto

package nodeagent

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetDirectorySizeRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDirectorySizeRequest) Reset()         { *m = GetDirectorySizeRequest{} }
func (m *GetDirectorySizeRequest) String() string { return proto.CompactTextString(m) }
func (*GetDirectorySizeRequest) ProtoMessage()    {}
func (*GetDirectorySizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{0}
}

func (m *GetDirectorySizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDirectorySizeRequest.Unmarshal(m, b)
}
func (m *GetDirectorySizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDirectorySizeRequest.Marshal(b, m, deterministic)
}
func (m *GetDirectorySizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDirectorySizeRequest.Merge(m, src)
}
func (m *GetDirectorySizeRequest) XXX_Size() int {
	return xxx_messageInfo_GetDirectorySizeRequest.Size(m)
}
func (m *GetDirectorySizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDirectorySizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDirectorySizeRequest proto.InternalMessageInfo

func (m *GetDirectorySizeRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type GetDirectorySizeReply struct {
	Infos                map[string]int64 `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetDirectorySizeReply) Reset()         { *m = GetDirectorySizeReply{} }
func (m *GetDirectorySizeReply) String() string { return proto.CompactTextString(m) }
func (*GetDirectorySizeReply) ProtoMessage()    {}
func (*GetDirectorySizeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{1}
}

func (m *GetDirectorySizeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDirectorySizeReply.Unmarshal(m, b)
}
func (m *GetDirectorySizeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDirectorySizeReply.Marshal(b, m, deterministic)
}
func (m *GetDirectorySizeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDirectorySizeReply.Merge(m, src)
}
func (m *GetDirectorySizeReply) XXX_Size() int {
	return xxx_messageInfo_GetDirectorySizeReply.Size(m)
}
func (m *GetDirectorySizeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDirectorySizeReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetDirectorySizeReply proto.InternalMessageInfo

func (m *GetDirectorySizeReply) GetInfos() map[string]int64 {
	if m != nil {
		return m.Infos
	}
	return nil
}

type GetMountpointsSizeRequest struct {
	Paths                []string `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMountpointsSizeRequest) Reset()         { *m = GetMountpointsSizeRequest{} }
func (m *GetMountpointsSizeRequest) String() string { return proto.CompactTextString(m) }
func (*GetMountpointsSizeRequest) ProtoMessage()    {}
func (*GetMountpointsSizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{2}
}

func (m *GetMountpointsSizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMountpointsSizeRequest.Unmarshal(m, b)
}
func (m *GetMountpointsSizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMountpointsSizeRequest.Marshal(b, m, deterministic)
}
func (m *GetMountpointsSizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMountpointsSizeRequest.Merge(m, src)
}
func (m *GetMountpointsSizeRequest) XXX_Size() int {
	return xxx_messageInfo_GetMountpointsSizeRequest.Size(m)
}
func (m *GetMountpointsSizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMountpointsSizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMountpointsSizeRequest proto.InternalMessageInfo

func (m *GetMountpointsSizeRequest) GetPaths() []string {
	if m != nil {
		return m.Paths
	}
	return nil
}

type GetMountpointsSizeReply struct {
	Infos                map[string]*Sizes `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetMountpointsSizeReply) Reset()         { *m = GetMountpointsSizeReply{} }
func (m *GetMountpointsSizeReply) String() string { return proto.CompactTextString(m) }
func (*GetMountpointsSizeReply) ProtoMessage()    {}
func (*GetMountpointsSizeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{3}
}

func (m *GetMountpointsSizeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMountpointsSizeReply.Unmarshal(m, b)
}
func (m *GetMountpointsSizeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMountpointsSizeReply.Marshal(b, m, deterministic)
}
func (m *GetMountpointsSizeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMountpointsSizeReply.Merge(m, src)
}
func (m *GetMountpointsSizeReply) XXX_Size() int {
	return xxx_messageInfo_GetMountpointsSizeReply.Size(m)
}
func (m *GetMountpointsSizeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMountpointsSizeReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetMountpointsSizeReply proto.InternalMessageInfo

func (m *GetMountpointsSizeReply) GetInfos() map[string]*Sizes {
	if m != nil {
		return m.Infos
	}
	return nil
}

type Sizes struct {
	Tsize                int64    `protobuf:"varint,1,opt,name=Tsize,json=tsize,proto3" json:"Tsize,omitempty"`
	Usize                int64    `protobuf:"varint,2,opt,name=Usize,json=usize,proto3" json:"Usize,omitempty"`
	Fsize                int64    `protobuf:"varint,3,opt,name=Fsize,json=fsize,proto3" json:"Fsize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sizes) Reset()         { *m = Sizes{} }
func (m *Sizes) String() string { return proto.CompactTextString(m) }
func (*Sizes) ProtoMessage()    {}
func (*Sizes) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{4}
}

func (m *Sizes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sizes.Unmarshal(m, b)
}
func (m *Sizes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sizes.Marshal(b, m, deterministic)
}
func (m *Sizes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sizes.Merge(m, src)
}
func (m *Sizes) XXX_Size() int {
	return xxx_messageInfo_Sizes.Size(m)
}
func (m *Sizes) XXX_DiscardUnknown() {
	xxx_messageInfo_Sizes.DiscardUnknown(m)
}

var xxx_messageInfo_Sizes proto.InternalMessageInfo

func (m *Sizes) GetTsize() int64 {
	if m != nil {
		return m.Tsize
	}
	return 0
}

func (m *Sizes) GetUsize() int64 {
	if m != nil {
		return m.Usize
	}
	return 0
}

func (m *Sizes) GetFsize() int64 {
	if m != nil {
		return m.Fsize
	}
	return 0
}

type GetDisksInfoRequest struct {
	Disk                 string   `protobuf:"bytes,1,opt,name=disk,proto3" json:"disk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDisksInfoRequest) Reset()         { *m = GetDisksInfoRequest{} }
func (m *GetDisksInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetDisksInfoRequest) ProtoMessage()    {}
func (*GetDisksInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{5}
}

func (m *GetDisksInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDisksInfoRequest.Unmarshal(m, b)
}
func (m *GetDisksInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDisksInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetDisksInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDisksInfoRequest.Merge(m, src)
}
func (m *GetDisksInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetDisksInfoRequest.Size(m)
}
func (m *GetDisksInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDisksInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDisksInfoRequest proto.InternalMessageInfo

func (m *GetDisksInfoRequest) GetDisk() string {
	if m != nil {
		return m.Disk
	}
	return ""
}

type GetDisksInfoReply struct {
	Infos                map[string]*Diskinfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetDisksInfoReply) Reset()         { *m = GetDisksInfoReply{} }
func (m *GetDisksInfoReply) String() string { return proto.CompactTextString(m) }
func (*GetDisksInfoReply) ProtoMessage()    {}
func (*GetDisksInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{6}
}

func (m *GetDisksInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDisksInfoReply.Unmarshal(m, b)
}
func (m *GetDisksInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDisksInfoReply.Marshal(b, m, deterministic)
}
func (m *GetDisksInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDisksInfoReply.Merge(m, src)
}
func (m *GetDisksInfoReply) XXX_Size() int {
	return xxx_messageInfo_GetDisksInfoReply.Size(m)
}
func (m *GetDisksInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDisksInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetDisksInfoReply proto.InternalMessageInfo

func (m *GetDisksInfoReply) GetInfos() map[string]*Diskinfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

type Diskinfo struct {
	Diskinfo             map[string]string `protobuf:"bytes,1,rep,name=diskinfo,proto3" json:"diskinfo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Diskinfo) Reset()         { *m = Diskinfo{} }
func (m *Diskinfo) String() string { return proto.CompactTextString(m) }
func (*Diskinfo) ProtoMessage()    {}
func (*Diskinfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{7}
}

func (m *Diskinfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Diskinfo.Unmarshal(m, b)
}
func (m *Diskinfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Diskinfo.Marshal(b, m, deterministic)
}
func (m *Diskinfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Diskinfo.Merge(m, src)
}
func (m *Diskinfo) XXX_Size() int {
	return xxx_messageInfo_Diskinfo.Size(m)
}
func (m *Diskinfo) XXX_DiscardUnknown() {
	xxx_messageInfo_Diskinfo.DiscardUnknown(m)
}

var xxx_messageInfo_Diskinfo proto.InternalMessageInfo

func (m *Diskinfo) GetDiskinfo() map[string]string {
	if m != nil {
		return m.Diskinfo
	}
	return nil
}

type IscsiDiscoveryRequest struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port                 string   `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	Iqn                  string   `protobuf:"bytes,3,opt,name=iqn,proto3" json:"iqn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IscsiDiscoveryRequest) Reset()         { *m = IscsiDiscoveryRequest{} }
func (m *IscsiDiscoveryRequest) String() string { return proto.CompactTextString(m) }
func (*IscsiDiscoveryRequest) ProtoMessage()    {}
func (*IscsiDiscoveryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{8}
}

func (m *IscsiDiscoveryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IscsiDiscoveryRequest.Unmarshal(m, b)
}
func (m *IscsiDiscoveryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IscsiDiscoveryRequest.Marshal(b, m, deterministic)
}
func (m *IscsiDiscoveryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IscsiDiscoveryRequest.Merge(m, src)
}
func (m *IscsiDiscoveryRequest) XXX_Size() int {
	return xxx_messageInfo_IscsiDiscoveryRequest.Size(m)
}
func (m *IscsiDiscoveryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IscsiDiscoveryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IscsiDiscoveryRequest proto.InternalMessageInfo

func (m *IscsiDiscoveryRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *IscsiDiscoveryRequest) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *IscsiDiscoveryRequest) GetIqn() string {
	if m != nil {
		return m.Iqn
	}
	return ""
}

type IscsiDiscoveryReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IscsiDiscoveryReply) Reset()         { *m = IscsiDiscoveryReply{} }
func (m *IscsiDiscoveryReply) String() string { return proto.CompactTextString(m) }
func (*IscsiDiscoveryReply) ProtoMessage()    {}
func (*IscsiDiscoveryReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{9}
}

func (m *IscsiDiscoveryReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IscsiDiscoveryReply.Unmarshal(m, b)
}
func (m *IscsiDiscoveryReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IscsiDiscoveryReply.Marshal(b, m, deterministic)
}
func (m *IscsiDiscoveryReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IscsiDiscoveryReply.Merge(m, src)
}
func (m *IscsiDiscoveryReply) XXX_Size() int {
	return xxx_messageInfo_IscsiDiscoveryReply.Size(m)
}
func (m *IscsiDiscoveryReply) XXX_DiscardUnknown() {
	xxx_messageInfo_IscsiDiscoveryReply.DiscardUnknown(m)
}

var xxx_messageInfo_IscsiDiscoveryReply proto.InternalMessageInfo

type IscsiChapRequest struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port                 string   `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	Iqn                  string   `protobuf:"bytes,3,opt,name=iqn,proto3" json:"iqn,omitempty"`
	Username             string   `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IscsiChapRequest) Reset()         { *m = IscsiChapRequest{} }
func (m *IscsiChapRequest) String() string { return proto.CompactTextString(m) }
func (*IscsiChapRequest) ProtoMessage()    {}
func (*IscsiChapRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{10}
}

func (m *IscsiChapRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IscsiChapRequest.Unmarshal(m, b)
}
func (m *IscsiChapRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IscsiChapRequest.Marshal(b, m, deterministic)
}
func (m *IscsiChapRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IscsiChapRequest.Merge(m, src)
}
func (m *IscsiChapRequest) XXX_Size() int {
	return xxx_messageInfo_IscsiChapRequest.Size(m)
}
func (m *IscsiChapRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IscsiChapRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IscsiChapRequest proto.InternalMessageInfo

func (m *IscsiChapRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *IscsiChapRequest) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *IscsiChapRequest) GetIqn() string {
	if m != nil {
		return m.Iqn
	}
	return ""
}

func (m *IscsiChapRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *IscsiChapRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type IscsiChapReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IscsiChapReply) Reset()         { *m = IscsiChapReply{} }
func (m *IscsiChapReply) String() string { return proto.CompactTextString(m) }
func (*IscsiChapReply) ProtoMessage()    {}
func (*IscsiChapReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{11}
}

func (m *IscsiChapReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IscsiChapReply.Unmarshal(m, b)
}
func (m *IscsiChapReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IscsiChapReply.Marshal(b, m, deterministic)
}
func (m *IscsiChapReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IscsiChapReply.Merge(m, src)
}
func (m *IscsiChapReply) XXX_Size() int {
	return xxx_messageInfo_IscsiChapReply.Size(m)
}
func (m *IscsiChapReply) XXX_DiscardUnknown() {
	xxx_messageInfo_IscsiChapReply.DiscardUnknown(m)
}

var xxx_messageInfo_IscsiChapReply proto.InternalMessageInfo

type IscsiLoginRequest struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port                 string   `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	Iqn                  string   `protobuf:"bytes,3,opt,name=iqn,proto3" json:"iqn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IscsiLoginRequest) Reset()         { *m = IscsiLoginRequest{} }
func (m *IscsiLoginRequest) String() string { return proto.CompactTextString(m) }
func (*IscsiLoginRequest) ProtoMessage()    {}
func (*IscsiLoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{12}
}

func (m *IscsiLoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IscsiLoginRequest.Unmarshal(m, b)
}
func (m *IscsiLoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IscsiLoginRequest.Marshal(b, m, deterministic)
}
func (m *IscsiLoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IscsiLoginRequest.Merge(m, src)
}
func (m *IscsiLoginRequest) XXX_Size() int {
	return xxx_messageInfo_IscsiLoginRequest.Size(m)
}
func (m *IscsiLoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IscsiLoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IscsiLoginRequest proto.InternalMessageInfo

func (m *IscsiLoginRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *IscsiLoginRequest) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *IscsiLoginRequest) GetIqn() string {
	if m != nil {
		return m.Iqn
	}
	return ""
}

type IscsiLoginReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IscsiLoginReply) Reset()         { *m = IscsiLoginReply{} }
func (m *IscsiLoginReply) String() string { return proto.CompactTextString(m) }
func (*IscsiLoginReply) ProtoMessage()    {}
func (*IscsiLoginReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{13}
}

func (m *IscsiLoginReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IscsiLoginReply.Unmarshal(m, b)
}
func (m *IscsiLoginReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IscsiLoginReply.Marshal(b, m, deterministic)
}
func (m *IscsiLoginReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IscsiLoginReply.Merge(m, src)
}
func (m *IscsiLoginReply) XXX_Size() int {
	return xxx_messageInfo_IscsiLoginReply.Size(m)
}
func (m *IscsiLoginReply) XXX_DiscardUnknown() {
	xxx_messageInfo_IscsiLoginReply.DiscardUnknown(m)
}

var xxx_messageInfo_IscsiLoginReply proto.InternalMessageInfo

type IscsiLogoutRequest struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port                 string   `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	Iqn                  string   `protobuf:"bytes,3,opt,name=iqn,proto3" json:"iqn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IscsiLogoutRequest) Reset()         { *m = IscsiLogoutRequest{} }
func (m *IscsiLogoutRequest) String() string { return proto.CompactTextString(m) }
func (*IscsiLogoutRequest) ProtoMessage()    {}
func (*IscsiLogoutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{14}
}

func (m *IscsiLogoutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IscsiLogoutRequest.Unmarshal(m, b)
}
func (m *IscsiLogoutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IscsiLogoutRequest.Marshal(b, m, deterministic)
}
func (m *IscsiLogoutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IscsiLogoutRequest.Merge(m, src)
}
func (m *IscsiLogoutRequest) XXX_Size() int {
	return xxx_messageInfo_IscsiLogoutRequest.Size(m)
}
func (m *IscsiLogoutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IscsiLogoutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IscsiLogoutRequest proto.InternalMessageInfo

func (m *IscsiLogoutRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *IscsiLogoutRequest) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *IscsiLogoutRequest) GetIqn() string {
	if m != nil {
		return m.Iqn
	}
	return ""
}

type IscsiLogoutReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IscsiLogoutReply) Reset()         { *m = IscsiLogoutReply{} }
func (m *IscsiLogoutReply) String() string { return proto.CompactTextString(m) }
func (*IscsiLogoutReply) ProtoMessage()    {}
func (*IscsiLogoutReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{15}
}

func (m *IscsiLogoutReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IscsiLogoutReply.Unmarshal(m, b)
}
func (m *IscsiLogoutReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IscsiLogoutReply.Marshal(b, m, deterministic)
}
func (m *IscsiLogoutReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IscsiLogoutReply.Merge(m, src)
}
func (m *IscsiLogoutReply) XXX_Size() int {
	return xxx_messageInfo_IscsiLogoutReply.Size(m)
}
func (m *IscsiLogoutReply) XXX_DiscardUnknown() {
	xxx_messageInfo_IscsiLogoutReply.DiscardUnknown(m)
}

var xxx_messageInfo_IscsiLogoutReply proto.InternalMessageInfo

type IscsiGetBlocksRequest struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port                 string   `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	Iqn                  string   `protobuf:"bytes,3,opt,name=iqn,proto3" json:"iqn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IscsiGetBlocksRequest) Reset()         { *m = IscsiGetBlocksRequest{} }
func (m *IscsiGetBlocksRequest) String() string { return proto.CompactTextString(m) }
func (*IscsiGetBlocksRequest) ProtoMessage()    {}
func (*IscsiGetBlocksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{16}
}

func (m *IscsiGetBlocksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IscsiGetBlocksRequest.Unmarshal(m, b)
}
func (m *IscsiGetBlocksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IscsiGetBlocksRequest.Marshal(b, m, deterministic)
}
func (m *IscsiGetBlocksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IscsiGetBlocksRequest.Merge(m, src)
}
func (m *IscsiGetBlocksRequest) XXX_Size() int {
	return xxx_messageInfo_IscsiGetBlocksRequest.Size(m)
}
func (m *IscsiGetBlocksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IscsiGetBlocksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IscsiGetBlocksRequest proto.InternalMessageInfo

func (m *IscsiGetBlocksRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *IscsiGetBlocksRequest) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *IscsiGetBlocksRequest) GetIqn() string {
	if m != nil {
		return m.Iqn
	}
	return ""
}

type IscsiGetBlocksReply struct {
	IscsiBlock           map[string]*IscsiDevice `protobuf:"bytes,1,rep,name=iscsiBlock,proto3" json:"iscsiBlock,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *IscsiGetBlocksReply) Reset()         { *m = IscsiGetBlocksReply{} }
func (m *IscsiGetBlocksReply) String() string { return proto.CompactTextString(m) }
func (*IscsiGetBlocksReply) ProtoMessage()    {}
func (*IscsiGetBlocksReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{17}
}

func (m *IscsiGetBlocksReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IscsiGetBlocksReply.Unmarshal(m, b)
}
func (m *IscsiGetBlocksReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IscsiGetBlocksReply.Marshal(b, m, deterministic)
}
func (m *IscsiGetBlocksReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IscsiGetBlocksReply.Merge(m, src)
}
func (m *IscsiGetBlocksReply) XXX_Size() int {
	return xxx_messageInfo_IscsiGetBlocksReply.Size(m)
}
func (m *IscsiGetBlocksReply) XXX_DiscardUnknown() {
	xxx_messageInfo_IscsiGetBlocksReply.DiscardUnknown(m)
}

var xxx_messageInfo_IscsiGetBlocksReply proto.InternalMessageInfo

func (m *IscsiGetBlocksReply) GetIscsiBlock() map[string]*IscsiDevice {
	if m != nil {
		return m.IscsiBlock
	}
	return nil
}

type IscsiDevice struct {
	Blocks               []string `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IscsiDevice) Reset()         { *m = IscsiDevice{} }
func (m *IscsiDevice) String() string { return proto.CompactTextString(m) }
func (*IscsiDevice) ProtoMessage()    {}
func (*IscsiDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{18}
}

func (m *IscsiDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IscsiDevice.Unmarshal(m, b)
}
func (m *IscsiDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IscsiDevice.Marshal(b, m, deterministic)
}
func (m *IscsiDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IscsiDevice.Merge(m, src)
}
func (m *IscsiDevice) XXX_Size() int {
	return xxx_messageInfo_IscsiDevice.Size(m)
}
func (m *IscsiDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_IscsiDevice.DiscardUnknown(m)
}

var xxx_messageInfo_IscsiDevice proto.InternalMessageInfo

func (m *IscsiDevice) GetBlocks() []string {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type IscsiGetMultipathsRequest struct {
	Devs                 []string `protobuf:"bytes,1,rep,name=devs,proto3" json:"devs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IscsiGetMultipathsRequest) Reset()         { *m = IscsiGetMultipathsRequest{} }
func (m *IscsiGetMultipathsRequest) String() string { return proto.CompactTextString(m) }
func (*IscsiGetMultipathsRequest) ProtoMessage()    {}
func (*IscsiGetMultipathsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{19}
}

func (m *IscsiGetMultipathsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IscsiGetMultipathsRequest.Unmarshal(m, b)
}
func (m *IscsiGetMultipathsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IscsiGetMultipathsRequest.Marshal(b, m, deterministic)
}
func (m *IscsiGetMultipathsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IscsiGetMultipathsRequest.Merge(m, src)
}
func (m *IscsiGetMultipathsRequest) XXX_Size() int {
	return xxx_messageInfo_IscsiGetMultipathsRequest.Size(m)
}
func (m *IscsiGetMultipathsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IscsiGetMultipathsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IscsiGetMultipathsRequest proto.InternalMessageInfo

func (m *IscsiGetMultipathsRequest) GetDevs() []string {
	if m != nil {
		return m.Devs
	}
	return nil
}

type IscsiGetMultipathsReply struct {
	Dev                  string   `protobuf:"bytes,1,opt,name=dev,proto3" json:"dev,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IscsiGetMultipathsReply) Reset()         { *m = IscsiGetMultipathsReply{} }
func (m *IscsiGetMultipathsReply) String() string { return proto.CompactTextString(m) }
func (*IscsiGetMultipathsReply) ProtoMessage()    {}
func (*IscsiGetMultipathsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{20}
}

func (m *IscsiGetMultipathsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IscsiGetMultipathsReply.Unmarshal(m, b)
}
func (m *IscsiGetMultipathsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IscsiGetMultipathsReply.Marshal(b, m, deterministic)
}
func (m *IscsiGetMultipathsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IscsiGetMultipathsReply.Merge(m, src)
}
func (m *IscsiGetMultipathsReply) XXX_Size() int {
	return xxx_messageInfo_IscsiGetMultipathsReply.Size(m)
}
func (m *IscsiGetMultipathsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_IscsiGetMultipathsReply.DiscardUnknown(m)
}

var xxx_messageInfo_IscsiGetMultipathsReply proto.InternalMessageInfo

func (m *IscsiGetMultipathsReply) GetDev() string {
	if m != nil {
		return m.Dev
	}
	return ""
}

type ReplaceInitiatornameRequest struct {
	SrcFile              string   `protobuf:"bytes,1,opt,name=src_file,json=srcFile,proto3" json:"src_file,omitempty"`
	DstFile              string   `protobuf:"bytes,2,opt,name=dst_file,json=dstFile,proto3" json:"dst_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplaceInitiatornameRequest) Reset()         { *m = ReplaceInitiatornameRequest{} }
func (m *ReplaceInitiatornameRequest) String() string { return proto.CompactTextString(m) }
func (*ReplaceInitiatornameRequest) ProtoMessage()    {}
func (*ReplaceInitiatornameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{21}
}

func (m *ReplaceInitiatornameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplaceInitiatornameRequest.Unmarshal(m, b)
}
func (m *ReplaceInitiatornameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplaceInitiatornameRequest.Marshal(b, m, deterministic)
}
func (m *ReplaceInitiatornameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplaceInitiatornameRequest.Merge(m, src)
}
func (m *ReplaceInitiatornameRequest) XXX_Size() int {
	return xxx_messageInfo_ReplaceInitiatornameRequest.Size(m)
}
func (m *ReplaceInitiatornameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplaceInitiatornameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplaceInitiatornameRequest proto.InternalMessageInfo

func (m *ReplaceInitiatornameRequest) GetSrcFile() string {
	if m != nil {
		return m.SrcFile
	}
	return ""
}

func (m *ReplaceInitiatornameRequest) GetDstFile() string {
	if m != nil {
		return m.DstFile
	}
	return ""
}

type ReplaceInitiatornameReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplaceInitiatornameReply) Reset()         { *m = ReplaceInitiatornameReply{} }
func (m *ReplaceInitiatornameReply) String() string { return proto.CompactTextString(m) }
func (*ReplaceInitiatornameReply) ProtoMessage()    {}
func (*ReplaceInitiatornameReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{22}
}

func (m *ReplaceInitiatornameReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplaceInitiatornameReply.Unmarshal(m, b)
}
func (m *ReplaceInitiatornameReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplaceInitiatornameReply.Marshal(b, m, deterministic)
}
func (m *ReplaceInitiatornameReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplaceInitiatornameReply.Merge(m, src)
}
func (m *ReplaceInitiatornameReply) XXX_Size() int {
	return xxx_messageInfo_ReplaceInitiatornameReply.Size(m)
}
func (m *ReplaceInitiatornameReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplaceInitiatornameReply.DiscardUnknown(m)
}

var xxx_messageInfo_ReplaceInitiatornameReply proto.InternalMessageInfo

type CleanIscsiDeviceRequest struct {
	Device               string   `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CleanIscsiDeviceRequest) Reset()         { *m = CleanIscsiDeviceRequest{} }
func (m *CleanIscsiDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*CleanIscsiDeviceRequest) ProtoMessage()    {}
func (*CleanIscsiDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{23}
}

func (m *CleanIscsiDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanIscsiDeviceRequest.Unmarshal(m, b)
}
func (m *CleanIscsiDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanIscsiDeviceRequest.Marshal(b, m, deterministic)
}
func (m *CleanIscsiDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanIscsiDeviceRequest.Merge(m, src)
}
func (m *CleanIscsiDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_CleanIscsiDeviceRequest.Size(m)
}
func (m *CleanIscsiDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanIscsiDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CleanIscsiDeviceRequest proto.InternalMessageInfo

func (m *CleanIscsiDeviceRequest) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

type CleanIscsiDeviceReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CleanIscsiDeviceReply) Reset()         { *m = CleanIscsiDeviceReply{} }
func (m *CleanIscsiDeviceReply) String() string { return proto.CompactTextString(m) }
func (*CleanIscsiDeviceReply) ProtoMessage()    {}
func (*CleanIscsiDeviceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b5331ae4b8115762, []int{24}
}

func (m *CleanIscsiDeviceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanIscsiDeviceReply.Unmarshal(m, b)
}
func (m *CleanIscsiDeviceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanIscsiDeviceReply.Marshal(b, m, deterministic)
}
func (m *CleanIscsiDeviceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanIscsiDeviceReply.Merge(m, src)
}
func (m *CleanIscsiDeviceReply) XXX_Size() int {
	return xxx_messageInfo_CleanIscsiDeviceReply.Size(m)
}
func (m *CleanIscsiDeviceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanIscsiDeviceReply.DiscardUnknown(m)
}

var xxx_messageInfo_CleanIscsiDeviceReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetDirectorySizeRequest)(nil), "nodeagent.GetDirectorySizeRequest")
	proto.RegisterType((*GetDirectorySizeReply)(nil), "nodeagent.GetDirectorySizeReply")
	proto.RegisterMapType((map[string]int64)(nil), "nodeagent.GetDirectorySizeReply.InfosEntry")
	proto.RegisterType((*GetMountpointsSizeRequest)(nil), "nodeagent.GetMountpointsSizeRequest")
	proto.RegisterType((*GetMountpointsSizeReply)(nil), "nodeagent.GetMountpointsSizeReply")
	proto.RegisterMapType((map[string]*Sizes)(nil), "nodeagent.GetMountpointsSizeReply.InfosEntry")
	proto.RegisterType((*Sizes)(nil), "nodeagent.sizes")
	proto.RegisterType((*GetDisksInfoRequest)(nil), "nodeagent.GetDisksInfoRequest")
	proto.RegisterType((*GetDisksInfoReply)(nil), "nodeagent.GetDisksInfoReply")
	proto.RegisterMapType((map[string]*Diskinfo)(nil), "nodeagent.GetDisksInfoReply.InfosEntry")
	proto.RegisterType((*Diskinfo)(nil), "nodeagent.diskinfo")
	proto.RegisterMapType((map[string]string)(nil), "nodeagent.diskinfo.DiskinfoEntry")
	proto.RegisterType((*IscsiDiscoveryRequest)(nil), "nodeagent.IscsiDiscoveryRequest")
	proto.RegisterType((*IscsiDiscoveryReply)(nil), "nodeagent.IscsiDiscoveryReply")
	proto.RegisterType((*IscsiChapRequest)(nil), "nodeagent.IscsiChapRequest")
	proto.RegisterType((*IscsiChapReply)(nil), "nodeagent.IscsiChapReply")
	proto.RegisterType((*IscsiLoginRequest)(nil), "nodeagent.IscsiLoginRequest")
	proto.RegisterType((*IscsiLoginReply)(nil), "nodeagent.IscsiLoginReply")
	proto.RegisterType((*IscsiLogoutRequest)(nil), "nodeagent.IscsiLogoutRequest")
	proto.RegisterType((*IscsiLogoutReply)(nil), "nodeagent.IscsiLogoutReply")
	proto.RegisterType((*IscsiGetBlocksRequest)(nil), "nodeagent.IscsiGetBlocksRequest")
	proto.RegisterType((*IscsiGetBlocksReply)(nil), "nodeagent.IscsiGetBlocksReply")
	proto.RegisterMapType((map[string]*IscsiDevice)(nil), "nodeagent.IscsiGetBlocksReply.IscsiBlockEntry")
	proto.RegisterType((*IscsiDevice)(nil), "nodeagent.iscsiDevice")
	proto.RegisterType((*IscsiGetMultipathsRequest)(nil), "nodeagent.IscsiGetMultipathsRequest")
	proto.RegisterType((*IscsiGetMultipathsReply)(nil), "nodeagent.IscsiGetMultipathsReply")
	proto.RegisterType((*ReplaceInitiatornameRequest)(nil), "nodeagent.ReplaceInitiatornameRequest")
	proto.RegisterType((*ReplaceInitiatornameReply)(nil), "nodeagent.ReplaceInitiatornameReply")
	proto.RegisterType((*CleanIscsiDeviceRequest)(nil), "nodeagent.CleanIscsiDeviceRequest")
	proto.RegisterType((*CleanIscsiDeviceReply)(nil), "nodeagent.CleanIscsiDeviceReply")
}

func init() { proto.RegisterFile("nodeagent.proto", fileDescriptor_b5331ae4b8115762) }

var fileDescriptor_b5331ae4b8115762 = []byte{
	// 905 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0x4f, 0x93, 0x1a, 0x45,
	0x14, 0x67, 0x42, 0xd8, 0x5d, 0x1e, 0x6a, 0xd8, 0xde, 0x65, 0x81, 0x21, 0xa6, 0xb0, 0x2b, 0xc6,
	0x4d, 0xc5, 0x60, 0x65, 0xbd, 0xa4, 0xb4, 0x72, 0x88, 0x4b, 0xb2, 0xa2, 0x42, 0x95, 0x24, 0xb9,
	0xe4, 0xa2, 0x93, 0x99, 0x26, 0xdb, 0xc5, 0x38, 0x3d, 0x99, 0x6e, 0xb0, 0xd8, 0xb3, 0xe5, 0x27,
	0xf0, 0x0b, 0x78, 0xf5, 0x33, 0xf8, 0x05, 0xfc, 0x56, 0x56, 0xff, 0x19, 0xe8, 0x19, 0x06, 0x38,
	0x70, 0x7b, 0xfd, 0x7b, 0xff, 0x5f, 0xbf, 0xf7, 0xba, 0xe1, 0x4e, 0xc4, 0x02, 0xe2, 0xbd, 0x27,
	0x91, 0xe8, 0xc5, 0x09, 0x13, 0x0c, 0x55, 0x97, 0x00, 0x7e, 0x0c, 0xcd, 0x2b, 0x22, 0xfa, 0x34,
	0x21, 0xbe, 0x60, 0xc9, 0xe2, 0x15, 0xbd, 0x21, 0x63, 0xf2, 0x61, 0x46, 0xb8, 0x40, 0x08, 0x6e,
	0xc7, 0x9e, 0xb8, 0x6e, 0x39, 0x5d, 0xe7, 0xbc, 0x3a, 0x56, 0x34, 0xfe, 0xcb, 0x81, 0xc6, 0xba,
	0x7c, 0x1c, 0x2e, 0xd0, 0x73, 0xa8, 0xd0, 0x68, 0xc2, 0x78, 0xcb, 0xe9, 0x96, 0xcf, 0x6b, 0x17,
	0x8f, 0x7a, 0x2b, 0xa7, 0x85, 0x0a, 0xbd, 0x81, 0x94, 0x7e, 0x11, 0x89, 0x64, 0x31, 0xd6, 0x9a,
	0xee, 0x53, 0x80, 0x15, 0x88, 0xea, 0x50, 0x9e, 0x92, 0x85, 0xf1, 0x2e, 0x49, 0x74, 0x0a, 0x95,
	0xb9, 0x17, 0xce, 0x48, 0xeb, 0x56, 0xd7, 0x39, 0x2f, 0x8f, 0xf5, 0xe1, 0x9b, 0x5b, 0x4f, 0x1d,
	0xfc, 0x04, 0xda, 0x57, 0x44, 0x0c, 0xd9, 0x2c, 0x12, 0x31, 0xa3, 0x91, 0xe0, 0x76, 0x1e, 0xa7,
	0x50, 0x91, 0xb1, 0xeb, 0xc8, 0xaa, 0x63, 0x7d, 0xc0, 0xff, 0x38, 0x2a, 0xf3, 0x35, 0x1d, 0x99,
	0xcb, 0x65, 0x36, 0x97, 0xc7, 0xd9, 0x5c, 0x8a, 0x54, 0x0a, 0xb2, 0xf9, 0x61, 0x47, 0x36, 0x0f,
	0xec, 0x6c, 0x6a, 0x17, 0x75, 0xcb, 0x09, 0xa7, 0x37, 0x84, 0xdb, 0xf9, 0x0d, 0xa0, 0xa2, 0x30,
	0x99, 0xcb, 0x6b, 0x49, 0x29, 0x43, 0xe5, 0x71, 0x45, 0xc8, 0x83, 0x44, 0xdf, 0x28, 0xd4, 0x14,
	0x66, 0x96, 0xa2, 0x2f, 0x15, 0x5a, 0xd6, 0xe8, 0x44, 0x1e, 0xf0, 0x43, 0x38, 0x51, 0xf7, 0xc1,
	0xa7, 0x5c, 0x86, 0x67, 0x5d, 0x76, 0x40, 0xf9, 0x34, 0xbd, 0x6c, 0x49, 0xe3, 0xbf, 0x1d, 0x38,
	0xce, 0xca, 0xca, 0xe2, 0x3c, 0xcb, 0x16, 0xe7, 0x8b, 0xfc, 0x45, 0xdb, 0xc2, 0x05, 0x65, 0x19,
	0xee, 0x28, 0xcb, 0xc3, 0x6c, 0x59, 0x4e, 0x2c, 0xf3, 0x32, 0x28, 0x69, 0xc4, 0xae, 0xcc, 0x9f,
	0x0e, 0x1c, 0xa5, 0x38, 0x7a, 0xb6, 0xa2, 0x4d, 0x74, 0x9f, 0x15, 0xa8, 0xf7, 0xfa, 0x86, 0xd0,
	0x71, 0x2d, 0x55, 0xdc, 0x6f, 0xe1, 0xe3, 0x0c, 0x6b, 0x57, 0x0b, 0x56, 0xed, 0x40, 0x7e, 0x86,
	0xc6, 0x80, 0xfb, 0x9c, 0xf6, 0x29, 0xf7, 0xd9, 0x9c, 0x24, 0x0b, 0xab, 0xb2, 0xd7, 0x8c, 0x8b,
	0xb4, 0xb2, 0x92, 0x56, 0xa3, 0xc5, 0x12, 0x61, 0xac, 0x28, 0x5a, 0x3a, 0xa3, 0x1f, 0x22, 0x75,
	0x59, 0xd5, 0xb1, 0x24, 0x71, 0x03, 0x4e, 0xf2, 0x26, 0xe3, 0x70, 0x81, 0xff, 0x70, 0xa0, 0xae,
	0xf0, 0xcb, 0x6b, 0x2f, 0xde, 0xdb, 0x0b, 0x72, 0xe1, 0x68, 0xc6, 0x49, 0x12, 0x79, 0xbf, 0x91,
	0xd6, 0x6d, 0x05, 0x2f, 0xcf, 0x92, 0x17, 0x7b, 0x9c, 0xff, 0xce, 0x92, 0xa0, 0x55, 0xd1, 0xbc,
	0xf4, 0x8c, 0xeb, 0xf0, 0x89, 0x15, 0x85, 0x0c, 0x6c, 0x08, 0xc7, 0x0a, 0xf9, 0x89, 0xbd, 0xa7,
	0xd1, 0xfe, 0xe9, 0x1f, 0xc3, 0x1d, 0xdb, 0x9c, 0xf4, 0x30, 0x02, 0x94, 0x42, 0x6c, 0x26, 0xf6,
	0x77, 0x81, 0x4c, 0x25, 0x53, 0x7b, 0xd2, 0x47, 0x7a, 0x91, 0x57, 0x44, 0x7c, 0x17, 0x32, 0x7f,
	0xca, 0xf7, 0x77, 0xf3, 0xaf, 0x63, 0x6e, 0xd2, 0xb2, 0x29, 0x47, 0x69, 0x04, 0x40, 0x25, 0xac,
	0x30, 0xd3, 0xb1, 0x3d, 0xab, 0x63, 0x0b, 0x74, 0x34, 0xa6, 0x00, 0xdd, 0xbe, 0x96, 0x05, 0xf7,
	0x8d, 0xa9, 0xd8, 0x8a, 0x5d, 0xd0, 0xc2, 0x5f, 0x66, 0x07, 0xec, 0xcc, 0xf2, 0xa7, 0x4c, 0xf5,
	0xc9, 0x9c, 0xfa, 0xc4, 0x6e, 0xed, 0xcf, 0xa1, 0x66, 0x71, 0xd0, 0x19, 0x1c, 0xbc, 0x53, 0x01,
	0x99, 0x85, 0x6a, 0x4e, 0xf8, 0x2b, 0x68, 0xa7, 0x01, 0x0f, 0x67, 0xa1, 0xa0, 0x6a, 0xcf, 0xda,
	0xfb, 0x85, 0xcc, 0x53, 0x15, 0x45, 0xe3, 0x47, 0xd0, 0x2c, 0x52, 0x90, 0x95, 0xa9, 0x43, 0x39,
	0x20, 0xf3, 0x34, 0xec, 0x80, 0xcc, 0xf1, 0x2b, 0xe8, 0x48, 0x96, 0xe7, 0x93, 0x41, 0x44, 0x05,
	0xf5, 0x04, 0x53, 0x2d, 0x9a, 0xda, 0x6f, 0xc3, 0x11, 0x4f, 0xfc, 0x5f, 0x26, 0x34, 0x24, 0x46,
	0xeb, 0x90, 0x27, 0xfe, 0x4b, 0x1a, 0x12, 0xc9, 0x0a, 0xb8, 0xd0, 0x2c, 0x7d, 0x4f, 0x87, 0x01,
	0x17, 0x92, 0x85, 0x3b, 0xd0, 0x2e, 0x36, 0x2a, 0x1b, 0xe1, 0x09, 0x34, 0x2f, 0x43, 0xe2, 0x45,
	0x03, 0xab, 0x2a, 0xc6, 0xdb, 0x19, 0x1c, 0x04, 0x0a, 0x30, 0xbe, 0xcc, 0x09, 0x37, 0xa1, 0xb1,
	0xae, 0x12, 0x87, 0x8b, 0x8b, 0xff, 0x0e, 0xa1, 0x3a, 0x62, 0x01, 0x79, 0x2e, 0xeb, 0x8c, 0xde,
	0x42, 0x3d, 0xff, 0x26, 0x22, 0xbc, 0xf5, 0xc1, 0x54, 0x6e, 0xdd, 0xee, 0xae, 0x47, 0x15, 0x97,
	0xd0, 0xaf, 0x80, 0xd6, 0xdf, 0x28, 0x74, 0x7f, 0xc7, 0x13, 0xa6, 0xed, 0xe3, 0xdd, 0x0f, 0x1d,
	0x2e, 0xa1, 0x11, 0x7c, 0x64, 0x2f, 0x7a, 0x74, 0x6f, 0xe3, 0x0b, 0xa0, 0xad, 0xde, 0xdd, 0xf6,
	0x42, 0xe0, 0x12, 0x7a, 0x6d, 0x16, 0xc9, 0x72, 0xcd, 0xa1, 0x6e, 0x7e, 0x06, 0xf2, 0x4b, 0xd5,
	0xbd, 0xb7, 0x45, 0x42, 0x5b, 0x7d, 0x01, 0xd5, 0xe5, 0x7a, 0x42, 0x9d, 0xbc, 0xb8, 0xb5, 0x3a,
	0xdd, 0x76, 0x31, 0x53, 0x9b, 0xf9, 0x1e, 0x60, 0xb5, 0x84, 0xd0, 0xdd, 0xbc, 0xa8, 0xbd, 0xea,
	0x5c, 0x77, 0x03, 0x57, 0x5b, 0xfa, 0x11, 0x6a, 0xd6, 0xae, 0x41, 0x9f, 0x16, 0x08, 0xaf, 0x76,
	0x9a, 0xdb, 0xd9, 0xc4, 0xce, 0xd6, 0x6c, 0xb9, 0x1c, 0xd6, 0x6b, 0x96, 0xdf, 0x5f, 0xeb, 0x35,
	0xcb, 0x6e, 0x16, 0xdd, 0x3b, 0xeb, 0x03, 0x99, 0xe9, 0x9d, 0x8d, 0x03, 0x9e, 0xe9, 0x9d, 0x0d,
	0x53, 0x8d, 0x4b, 0x68, 0x02, 0xa7, 0x45, 0x03, 0x87, 0x1e, 0x58, 0xda, 0x5b, 0xc6, 0xdc, 0xbd,
	0xbf, 0x53, 0x4e, 0xfb, 0x79, 0x0b, 0xf5, 0xfc, 0x20, 0x66, 0x26, 0x6c, 0xc3, 0x60, 0x67, 0x26,
	0xac, 0x70, 0x92, 0x71, 0xe9, 0xdd, 0x81, 0xfa, 0x44, 0x7f, 0xfd, 0x7f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x10, 0x77, 0x26, 0x8b, 0x57, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NodeAgentClient is the client API for NodeAgent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeAgentClient interface {
	GetDirectorySize(ctx context.Context, in *GetDirectorySizeRequest, opts ...grpc.CallOption) (*GetDirectorySizeReply, error)
	GetMountpointsSize(ctx context.Context, in *GetMountpointsSizeRequest, opts ...grpc.CallOption) (*GetMountpointsSizeReply, error)
	GetDisksInfo(ctx context.Context, in *GetDisksInfoRequest, opts ...grpc.CallOption) (*GetDisksInfoReply, error)
	IscsiDiscovery(ctx context.Context, in *IscsiDiscoveryRequest, opts ...grpc.CallOption) (*IscsiDiscoveryReply, error)
	IscsiChap(ctx context.Context, in *IscsiChapRequest, opts ...grpc.CallOption) (*IscsiChapReply, error)
	IscsiLogin(ctx context.Context, in *IscsiLoginRequest, opts ...grpc.CallOption) (*IscsiLoginReply, error)
	IscsiLogout(ctx context.Context, in *IscsiLogoutRequest, opts ...grpc.CallOption) (*IscsiLogoutReply, error)
	IscsiGetBlocks(ctx context.Context, in *IscsiGetBlocksRequest, opts ...grpc.CallOption) (*IscsiGetBlocksReply, error)
	IscsiGetMultipaths(ctx context.Context, in *IscsiGetMultipathsRequest, opts ...grpc.CallOption) (*IscsiGetMultipathsReply, error)
	ReplaceInitiatorname(ctx context.Context, in *ReplaceInitiatornameRequest, opts ...grpc.CallOption) (*ReplaceInitiatornameReply, error)
	CleanIscsiDevice(ctx context.Context, in *CleanIscsiDeviceRequest, opts ...grpc.CallOption) (*CleanIscsiDeviceReply, error)
}

type nodeAgentClient struct {
	cc grpc.ClientConnInterface
}

func NewNodeAgentClient(cc grpc.ClientConnInterface) NodeAgentClient {
	return &nodeAgentClient{cc}
}

func (c *nodeAgentClient) GetDirectorySize(ctx context.Context, in *GetDirectorySizeRequest, opts ...grpc.CallOption) (*GetDirectorySizeReply, error) {
	out := new(GetDirectorySizeReply)
	err := c.cc.Invoke(ctx, "/nodeagent.NodeAgent/GetDirectorySize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeAgentClient) GetMountpointsSize(ctx context.Context, in *GetMountpointsSizeRequest, opts ...grpc.CallOption) (*GetMountpointsSizeReply, error) {
	out := new(GetMountpointsSizeReply)
	err := c.cc.Invoke(ctx, "/nodeagent.NodeAgent/GetMountpointsSize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeAgentClient) GetDisksInfo(ctx context.Context, in *GetDisksInfoRequest, opts ...grpc.CallOption) (*GetDisksInfoReply, error) {
	out := new(GetDisksInfoReply)
	err := c.cc.Invoke(ctx, "/nodeagent.NodeAgent/GetDisksInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeAgentClient) IscsiDiscovery(ctx context.Context, in *IscsiDiscoveryRequest, opts ...grpc.CallOption) (*IscsiDiscoveryReply, error) {
	out := new(IscsiDiscoveryReply)
	err := c.cc.Invoke(ctx, "/nodeagent.NodeAgent/IscsiDiscovery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeAgentClient) IscsiChap(ctx context.Context, in *IscsiChapRequest, opts ...grpc.CallOption) (*IscsiChapReply, error) {
	out := new(IscsiChapReply)
	err := c.cc.Invoke(ctx, "/nodeagent.NodeAgent/IscsiChap", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeAgentClient) IscsiLogin(ctx context.Context, in *IscsiLoginRequest, opts ...grpc.CallOption) (*IscsiLoginReply, error) {
	out := new(IscsiLoginReply)
	err := c.cc.Invoke(ctx, "/nodeagent.NodeAgent/IscsiLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeAgentClient) IscsiLogout(ctx context.Context, in *IscsiLogoutRequest, opts ...grpc.CallOption) (*IscsiLogoutReply, error) {
	out := new(IscsiLogoutReply)
	err := c.cc.Invoke(ctx, "/nodeagent.NodeAgent/IscsiLogout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeAgentClient) IscsiGetBlocks(ctx context.Context, in *IscsiGetBlocksRequest, opts ...grpc.CallOption) (*IscsiGetBlocksReply, error) {
	out := new(IscsiGetBlocksReply)
	err := c.cc.Invoke(ctx, "/nodeagent.NodeAgent/IscsiGetBlocks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeAgentClient) IscsiGetMultipaths(ctx context.Context, in *IscsiGetMultipathsRequest, opts ...grpc.CallOption) (*IscsiGetMultipathsReply, error) {
	out := new(IscsiGetMultipathsReply)
	err := c.cc.Invoke(ctx, "/nodeagent.NodeAgent/IscsiGetMultipaths", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeAgentClient) ReplaceInitiatorname(ctx context.Context, in *ReplaceInitiatornameRequest, opts ...grpc.CallOption) (*ReplaceInitiatornameReply, error) {
	out := new(ReplaceInitiatornameReply)
	err := c.cc.Invoke(ctx, "/nodeagent.NodeAgent/ReplaceInitiatorname", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeAgentClient) CleanIscsiDevice(ctx context.Context, in *CleanIscsiDeviceRequest, opts ...grpc.CallOption) (*CleanIscsiDeviceReply, error) {
	out := new(CleanIscsiDeviceReply)
	err := c.cc.Invoke(ctx, "/nodeagent.NodeAgent/CleanIscsiDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeAgentServer is the server API for NodeAgent service.
type NodeAgentServer interface {
	GetDirectorySize(context.Context, *GetDirectorySizeRequest) (*GetDirectorySizeReply, error)
	GetMountpointsSize(context.Context, *GetMountpointsSizeRequest) (*GetMountpointsSizeReply, error)
	GetDisksInfo(context.Context, *GetDisksInfoRequest) (*GetDisksInfoReply, error)
	IscsiDiscovery(context.Context, *IscsiDiscoveryRequest) (*IscsiDiscoveryReply, error)
	IscsiChap(context.Context, *IscsiChapRequest) (*IscsiChapReply, error)
	IscsiLogin(context.Context, *IscsiLoginRequest) (*IscsiLoginReply, error)
	IscsiLogout(context.Context, *IscsiLogoutRequest) (*IscsiLogoutReply, error)
	IscsiGetBlocks(context.Context, *IscsiGetBlocksRequest) (*IscsiGetBlocksReply, error)
	IscsiGetMultipaths(context.Context, *IscsiGetMultipathsRequest) (*IscsiGetMultipathsReply, error)
	ReplaceInitiatorname(context.Context, *ReplaceInitiatornameRequest) (*ReplaceInitiatornameReply, error)
	CleanIscsiDevice(context.Context, *CleanIscsiDeviceRequest) (*CleanIscsiDeviceReply, error)
}

// UnimplementedNodeAgentServer can be embedded to have forward compatible implementations.
type UnimplementedNodeAgentServer struct {
}

func (*UnimplementedNodeAgentServer) GetDirectorySize(ctx context.Context, req *GetDirectorySizeRequest) (*GetDirectorySizeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDirectorySize not implemented")
}
func (*UnimplementedNodeAgentServer) GetMountpointsSize(ctx context.Context, req *GetMountpointsSizeRequest) (*GetMountpointsSizeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMountpointsSize not implemented")
}
func (*UnimplementedNodeAgentServer) GetDisksInfo(ctx context.Context, req *GetDisksInfoRequest) (*GetDisksInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDisksInfo not implemented")
}
func (*UnimplementedNodeAgentServer) IscsiDiscovery(ctx context.Context, req *IscsiDiscoveryRequest) (*IscsiDiscoveryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IscsiDiscovery not implemented")
}
func (*UnimplementedNodeAgentServer) IscsiChap(ctx context.Context, req *IscsiChapRequest) (*IscsiChapReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IscsiChap not implemented")
}
func (*UnimplementedNodeAgentServer) IscsiLogin(ctx context.Context, req *IscsiLoginRequest) (*IscsiLoginReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IscsiLogin not implemented")
}
func (*UnimplementedNodeAgentServer) IscsiLogout(ctx context.Context, req *IscsiLogoutRequest) (*IscsiLogoutReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IscsiLogout not implemented")
}
func (*UnimplementedNodeAgentServer) IscsiGetBlocks(ctx context.Context, req *IscsiGetBlocksRequest) (*IscsiGetBlocksReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IscsiGetBlocks not implemented")
}
func (*UnimplementedNodeAgentServer) IscsiGetMultipaths(ctx context.Context, req *IscsiGetMultipathsRequest) (*IscsiGetMultipathsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IscsiGetMultipaths not implemented")
}
func (*UnimplementedNodeAgentServer) ReplaceInitiatorname(ctx context.Context, req *ReplaceInitiatornameRequest) (*ReplaceInitiatornameReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplaceInitiatorname not implemented")
}
func (*UnimplementedNodeAgentServer) CleanIscsiDevice(ctx context.Context, req *CleanIscsiDeviceRequest) (*CleanIscsiDeviceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CleanIscsiDevice not implemented")
}

func RegisterNodeAgentServer(s *grpc.Server, srv NodeAgentServer) {
	s.RegisterService(&_NodeAgent_serviceDesc, srv)
}

func _NodeAgent_GetDirectorySize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDirectorySizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeAgentServer).GetDirectorySize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeagent.NodeAgent/GetDirectorySize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeAgentServer).GetDirectorySize(ctx, req.(*GetDirectorySizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeAgent_GetMountpointsSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMountpointsSizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeAgentServer).GetMountpointsSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeagent.NodeAgent/GetMountpointsSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeAgentServer).GetMountpointsSize(ctx, req.(*GetMountpointsSizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeAgent_GetDisksInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDisksInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeAgentServer).GetDisksInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeagent.NodeAgent/GetDisksInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeAgentServer).GetDisksInfo(ctx, req.(*GetDisksInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeAgent_IscsiDiscovery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IscsiDiscoveryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeAgentServer).IscsiDiscovery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeagent.NodeAgent/IscsiDiscovery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeAgentServer).IscsiDiscovery(ctx, req.(*IscsiDiscoveryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeAgent_IscsiChap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IscsiChapRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeAgentServer).IscsiChap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeagent.NodeAgent/IscsiChap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeAgentServer).IscsiChap(ctx, req.(*IscsiChapRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeAgent_IscsiLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IscsiLoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeAgentServer).IscsiLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeagent.NodeAgent/IscsiLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeAgentServer).IscsiLogin(ctx, req.(*IscsiLoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeAgent_IscsiLogout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IscsiLogoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeAgentServer).IscsiLogout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeagent.NodeAgent/IscsiLogout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeAgentServer).IscsiLogout(ctx, req.(*IscsiLogoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeAgent_IscsiGetBlocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IscsiGetBlocksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeAgentServer).IscsiGetBlocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeagent.NodeAgent/IscsiGetBlocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeAgentServer).IscsiGetBlocks(ctx, req.(*IscsiGetBlocksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeAgent_IscsiGetMultipaths_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IscsiGetMultipathsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeAgentServer).IscsiGetMultipaths(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeagent.NodeAgent/IscsiGetMultipaths",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeAgentServer).IscsiGetMultipaths(ctx, req.(*IscsiGetMultipathsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeAgent_ReplaceInitiatorname_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplaceInitiatornameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeAgentServer).ReplaceInitiatorname(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeagent.NodeAgent/ReplaceInitiatorname",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeAgentServer).ReplaceInitiatorname(ctx, req.(*ReplaceInitiatornameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeAgent_CleanIscsiDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CleanIscsiDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeAgentServer).CleanIscsiDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeagent.NodeAgent/CleanIscsiDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeAgentServer).CleanIscsiDevice(ctx, req.(*CleanIscsiDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeAgent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nodeagent.NodeAgent",
	HandlerType: (*NodeAgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDirectorySize",
			Handler:    _NodeAgent_GetDirectorySize_Handler,
		},
		{
			MethodName: "GetMountpointsSize",
			Handler:    _NodeAgent_GetMountpointsSize_Handler,
		},
		{
			MethodName: "GetDisksInfo",
			Handler:    _NodeAgent_GetDisksInfo_Handler,
		},
		{
			MethodName: "IscsiDiscovery",
			Handler:    _NodeAgent_IscsiDiscovery_Handler,
		},
		{
			MethodName: "IscsiChap",
			Handler:    _NodeAgent_IscsiChap_Handler,
		},
		{
			MethodName: "IscsiLogin",
			Handler:    _NodeAgent_IscsiLogin_Handler,
		},
		{
			MethodName: "IscsiLogout",
			Handler:    _NodeAgent_IscsiLogout_Handler,
		},
		{
			MethodName: "IscsiGetBlocks",
			Handler:    _NodeAgent_IscsiGetBlocks_Handler,
		},
		{
			MethodName: "IscsiGetMultipaths",
			Handler:    _NodeAgent_IscsiGetMultipaths_Handler,
		},
		{
			MethodName: "ReplaceInitiatorname",
			Handler:    _NodeAgent_ReplaceInitiatorname_Handler,
		},
		{
			MethodName: "CleanIscsiDevice",
			Handler:    _NodeAgent_CleanIscsiDevice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nodeagent.proto",
}
