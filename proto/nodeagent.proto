syntax = "proto3";

package nodeagent;

message GetDirectorySizeRequest {
  string path = 1;
}

message GetDirectorySizeReply{
	map<string, int64> infos = 1;
}

service NodeAgent {
 rpc GetDirectorySize(GetDirectorySizeRequest) returns (GetDirectorySizeReply) {}
 rpc GetMountpointsSize(GetMountpointsSizeRequest) returns (GetMountpointsSizeReply) {}
 rpc GetDisksInfo(GetDisksInfoRequest) returns (GetDisksInfoReply) {}
 rpc IscsiDiscovery(IscsiDiscoveryRequest) returns (IscsiDiscoveryReply) {}
 rpc IscsiChap(IscsiChapRequest) returns (IscsiChapReply) {}
 rpc IscsiLogin(IscsiLoginRequest) returns (IscsiLoginReply) {}
 rpc IscsiLogout(IscsiLogoutRequest) returns (IscsiLogoutReply) {}
 rpc IscsiGetBlocks(IscsiGetBlocksRequest) returns (IscsiGetBlocksReply) {}
 rpc IscsiGetMultipaths(IscsiGetMultipathsRequest) returns (IscsiGetMultipathsReply) {}
 rpc ReplaceInitiatorname(ReplaceInitiatornameRequest) returns (ReplaceInitiatornameReply) {}
 rpc CleanIscsiDevice(CleanIscsiDeviceRequest) returns (CleanIscsiDeviceReply) {}
}

message GetMountpointsSizeRequest {
        repeated string paths = 1;
}

message GetMountpointsSizeReply{
	map<string, sizes> infos = 1;
}

message sizes{
	int64 Tsize = 1;
	int64 Usize = 2;
	int64 Fsize = 3;
}

message GetDisksInfoRequest {
	string disk = 1;
}

message GetDisksInfoReply{
	map<string, diskinfo> infos = 1;
}

message diskinfo{
	map<string,string> diskinfo = 1;
}

message IscsiDiscoveryRequest{
	string host = 1;
	string port = 2;
	string iqn = 3;
}

message IscsiDiscoveryReply{
	//string command_output = 1;
}

message IscsiChapRequest{
	string host = 1;
	string port = 2;
	string iqn = 3;
	string username = 4;
	string password = 5;
}

message IscsiChapReply{
	//string command_output = 1;
}

message IscsiLoginRequest{
	string host = 1;
	string port = 2;
	string iqn = 3;
}

message IscsiLoginReply{
	//string command_output = 1;
}

message IscsiLogoutRequest{
        string host = 1;
        string port = 2;
        string iqn = 3;
}

message IscsiLogoutReply{
	//string command_output = 1;
}

message IscsiGetBlocksRequest{
	string host = 1;
	string port = 2;
	string iqn = 3;
}

message IscsiGetBlocksReply{
	map<string, iscsiDevice> iscsiBlock= 1;
}

message iscsiDevice{
	repeated string blocks = 1;
}

message IscsiGetMultipathsRequest{
	repeated string devs =1;
}

message IscsiGetMultipathsReply{
	string dev = 1;
}

message ReplaceInitiatornameRequest{
	string src_file = 1;
	string dst_file = 2;
}

message ReplaceInitiatornameReply{
}

message CleanIscsiDeviceRequest{
	string device = 1;
}

message CleanIscsiDeviceReply{}
